@import "syntax-variables";

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-background-color;
    color: @jade;

    .line-number {
      &.cursor-line {
        background-color: @teal;
        color: @dark-orange;
      }

      &.cursor-line-no-selection {
        color: @jade;
      }
    }
  }

  .fold-marker:after,
  .gutter .line-number.folded,
  .gutter .line-number:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}
// Syntax styles

.syntax--comment {
  color: @gray;
}

.syntax--any {
  color: @red2;
}

.syntax--keyword {

  &.syntax--control {
    color: @red2;
  }

  &.syntax--operator {
    color: @blue;
  }

  &.syntax--other.syntax--special-method {
    color: @red2;
  }

  &.syntax--other.syntax--unit {
    color: @lightblue2;
  }

  &.syntax--other {
    color: @lightblue2;
  }
}

.syntax--storage {
  color: @red2;
}

.syntax--constant {
  color: @red;

  &.syntax--language{
    color: @dark-orange;
  }

  &.syntax--character.syntax--escape {
    color: @lightblue2;
  }

  &.syntax--numeric {
    color: @red;
  }

  &.syntax--other.syntax--color {
    color: @lightblue;
  }

  &.syntax--other.syntax--symbol {
    color: @lightblue2;
  }
}

.syntax--variable {
  color: @red;

  &.syntax--interpolation {
    color: darken(@lightblue2, 10%);
  }

  &.syntax--parameter.syntax--function {
    color: @orange;
  }

  &.syntax--language {
    color: @lightblue2;
  }

  &.syntax--property {
    color: @dark-orange;
  }
}

.syntax--invalid.syntax--illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.syntax--css {
  &.syntax--property-name {
    color: @lightblue2;
  }

  &.syntax--property-name {
    color: @red2;
  }

  &.syntax--constant {
    color: @dark-orange;
  }

  &.syntax--variable {
    color: @red2;
  }


  &.syntax--unit.syntax--keyword{
    color: @orange;
  }

  .classdiger{
    border: 1px solid #8000ff;
  }
  /*&.syntax--constant{
    color: @lightblue;
  }*/
  &.syntax--quoted {
    color: @string-color!important;
  }
}

.syntax--string {
  color: @string-color;

  &.syntax--html {
    color: @dark-orange;
  }

  &.syntax--regexp {
    color: @lightblue;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @string-color;
    }
  }

  &.syntax--other.syntax--link {
    color: @lightblue2;
  }
}

.bracket-matcher {
  border-radius: 50%;
  overflow: visible;
  border-bottom: none!important;
  background-repeat: no-repeat;
  filter: saturate(200%);
  // filter: hue-rotate(90deg);
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @gray!important;
    }

    &.syntax--string {
      color: @string-color;
    }

    &.syntax--array,
    &.syntax--parameters {
      color: @syntax-text-color;
    }

    &.syntax--variable {
      color: @red2;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @red2;
    }

    &.syntax--bold {
      color: @light-orange;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @purple;
      font-style: italic;
    }

    &.syntax--tag {
      color: darken(@red2, 24%);
    }
  }

  &.syntax--section.syntax--embedded {
    color: @lightblue2;
  }
}

.syntax--support {
  &.syntax--class {
    color: @orange;
  }
  // php echo syntax :P
  // &.syntax--construct.syntax--output{
  //   color: @lightblue2;
  // }
  &.syntax--function {
    color: @dark-orange;

    &.syntax--dom{
      color: @lightblue2;
    }

    &.syntax--any-method {
      color: @red2;
    }
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    color: @lightblue2;

    &.syntax--php{
      color: @dark-orange;
    }
  }

  &.syntax--name .syntax--js {
    color: @lightblue2;
  }

  &.syntax--name.syntax--type {
    color: @lightblue2;
  }

  &.syntax--other.syntax--inherited-class {
    color: @dark-orange;
  }

  &.syntax--name.syntax--class,
  &.syntax--name.syntax--type.syntax--class {
    color: @orange;
  }

  &.syntax--name.syntax--section {
    color: @red2;
  }

  &.syntax--name.syntax--tag {
    color: @red2;
    text-decoration: none;
  }

  &.syntax--other.syntax--attribute-name {
    color: @lightblue2;

    &.syntax--id {
      color: @lightblue2;
    }
  }
}

.syntax--meta {
  &.syntax--string-contents {
    color: @orange;
  }

  &.syntax--link {
    color: @orange;
  }

  &.syntax--require {
    color: @red2;
  }

  &.syntax--selector {
    color: @lightblue;
  }

  &.syntax--separator {
    background-color: @gray;
    color: @syntax-text-color;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @orange;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @purple;
  }

  &.syntax--deleted {
    color: @lightblue2;
  }

  &.syntax--italic {
    //color: @purple;
    font-style: italic;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @red2;
  }

  &.syntax--inserted {
    color: @lightblue2;
  }

  &.syntax--list {
    color: @lightblue2;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw.syntax--inline {
    color: @lightblue2;
  }
}

.syntax--source.syntax--gfm .syntax--markup {
  -webkit-font-smoothing: auto;

  &.syntax--heading {
    color: @lightblue2;
  }
}
// Mini editor

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}
